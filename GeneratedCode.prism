mdp
const N=3;

module die1
s1 : [0..7];
d1 : [0..6];

die1_STATE: [0..10] init 0;

[] (s1=0)-> 1/2: (s1'=1);
[] (s1=1)-> 1/2: (s1'=3);
[] (s1=3)-> 1/2: (s1'=1);
[] (s1=3)-> 1/2: (s1'=7)&(d1'=1);
[] (s1=1)-> 1/2: (s1'=4);
[] (s1=4)-> 1/2: (s1'=7)&(d1'=2);
[] (s1=4)-> 1/2: (s1'=7)&(d1'=3);
[] (s1=0)-> 1/2: (s1'=2);
[] (s1=2)-> 1/2: (s1'=5);
[] (s1=5)-> 1/2: (s1'=7)&(d1'=4);
[] (s1=5)-> 1/2: (s1'=7)&(d1'=5);
[] (s1=2)-> 1/2: (s1'=6);
[] (s1=6)-> 1/2: (s1'=2);
[] (s1=6)-> 1/2: (s1'=7)&(d1'=6);

endmodule 

module die2
s2 : [0..7];
d2 : [0..6];

die2_STATE: [0..10] init 0;

[] (s2=0)-> 1/2: (s2'=1);
[] (s2=1)-> 1/2: (s2'=3);
[] (s2=3)-> 1/2: (s2'=1);
[] (s2=3)-> 1/2: (s2'=7)&(d2'=1);
[] (s2=1)-> 1/2: (s2'=4);
[] (s2=4)-> 1/2: (s2'=7)&(d2'=2);
[] (s2=4)-> 1/2: (s2'=7)&(d2'=3);
[] (s2=0)-> 1/2: (s2'=2);
[] (s2=2)-> 1/2: (s2'=5);
[] (s2=5)-> 1/2: (s2'=7)&(d1'=4);
[] (s2=5)-> 1/2: (s2'=7)&(d1'=5);
[] (s2=2)-> 1/2: (s2'=6);
[] (s2=6)-> 1/2: (s2'=2);
[] (s2=6)-> 1/2: (s2'=7)&(d1'=6);

endmodule 

