mdp
const N=4;

module Process1
s1 : [0..1];
c1 : [0..N-1];
receive1 : [0..2];
sent1 : [0..2];

Process1_STATE: [0..10] init 0;

[] (Process1_STATE=0)&(s1=0)-> 0.5: (s1'=1)&(p1'=0)&(Process1_STATE'=0);
[] (Process1_STATE=0)&(s1=0)-> 0.5: (s1'=1)&(p1'=1)&(Process1_STATE'=0);

endmodule 

module Process2
s2 : [0..1];
c2 : [0..N-1];
receive2 : [0..2];
sent2 : [0..2];

Process2_STATE: [0..10] init 0;

[] (Process2_STATE=0)&(s2=0)-> 0.5: (s2'=1)&(p2'=0)&(Process2_STATE'=0);
[] (Process2_STATE=0)&(s2=0)-> 0.5: (s2'=1)&(p2'=1)&(Process2_STATE'=0);

endmodule 

module Process3
s3 : [0..1];
c3 : [0..N-1];
receive3 : [0..2];
sent3 : [0..2];

Process3_STATE: [0..10] init 0;

[] (Process3_STATE=0)&(s3=0)-> 0.5: (s3'=1)&(p3'=0)&(Process3_STATE'=0);
[] (Process3_STATE=0)&(s3=0)-> 0.5: (s3'=1)&(p3'=1)&(Process3_STATE'=0);

endmodule 

module Process4
s4 : [0..1];
c4 : [0..N-1];
receive4 : [0..2];
sent4 : [0..2];

Process4_STATE: [0..10] init 0;

[] (Process4_STATE=0)&(s4=0)-> 0.5: (s4'=1)&(p4'=0)&(Process4_STATE'=0);
[] (Process4_STATE=0)&(s4=0)-> 0.5: (s4'=1)&(p4'=1)&(Process4_STATE'=0);

endmodule 

