module Validator_i

Validator_i_STATE: [0..10] init 0;

[] (Validator_i_STATE=0) -> mR : (b_i'=createBlock(Validator_i,c_i,L_i))&(c_i'=c_i+1)&(Validator_i_STATE'=2);
[] (!isCp(b_i))&(Validator_i_STATE=2) -> 1:(Validator_i_STATE'=3);
[] !(!isCp(b_i))&(Validator_i_STATE=2) -> 1:(Validator_i_STATE'=4);
[PSFFD] (Validator_i_STATE=3) -> 1: (L_i'=addBlockLedger(L_i,b_i))&(Validator_i_STATE'=0);
[JBLIN] (Validator_i_STATE=4) -> 1: (L_i'=addBlockLedger(L_i,b_i))&(Validator_i_STATE'=5);
[AKBDO] (Validator_i_STATE=5) -> 1: (Validator_i_STATE'=0);
[] (Validator_i_STATE=0) -> hR : (Validator_i_STATE'=6);
[] (!isEmpty(set_i))&(Validator_i_STATE=6) -> 1:(b_i'=extractBlock(set_i))&(Validator_i_STATE'=10);
[] !(!isEmpty(set_i))&(Validator_i_STATE=6) -> 1:(Validator_i_STATE'=0);
[] (!canBeIns(b_i,B_i))&(Validator_i_STATE=10) -> 1: (Validator_i_STATE'=0);
[] !(!canBeIns(b_i,B_i))&(Validator_i_STATE=10) -> 1:(Validator_i_STATE'=11);
[] (isCp(b_i))&(Validator_i_STATE=11) -> 1:(Validator_i_STATE'=12);
[] !(isCp(b_i))&(Validator_i_STATE=11) -> 1:(Validator_i_STATE'=13);
[JTCTA] (Validator_i_STATE=12) -> 1: (setMiner_i' = addBlock(setMiner_i , b_i))&(Validator_i_STATE'=0);
[FIMSF] (Validator_i_STATE=13) -> 1: (setMiner_i' = addBlock(setMiner_i , b_i))&(Validator_i_STATE'=0);
[] (Validator_i_STATE=0) -> rC : (b_i′=lastCP(L_i))&(Validator_i_STATE'=14);
[] (isJust(b_i,Votes,Stakes))&(Validator_i_STATE=14) -> 1:(lastJ_i'=b_i)&(Validator_i_STATE'=0);
[] !(isJust(b_i,Votes,Stakes))&(Validator_i_STATE=14) -> 1:(Validator_i_STATE'=0);

endmodule 

module Network

Network_STATE: [0..10] init 0;

[PSFFD] (Network_STATE=0) -> 1: foreach k in N_i { set_k'=addBlock(set_k,b_i); }&(Network_STATE'=0);
[JBLIN] (Network_STATE=0) -> 1: foreach k in N_i { set_k'=addBlock(set_k,b_i); }&(Network_STATE'=0);
[JTCTA] (Network_STATE=0) -> 1: set_i' = removeBlock(set_i,b_i)&(Network_STATE'=0);
[FIMSF] (Network_STATE=0) -> 1: set_i' = removeBlock(set_i,b_i)&(Network_STATE'=0);
[] (Network_STATE=0) -> 

endmodule 

module Vote_Manager

Vote_Manager_STATE: [0..10] init 0;

[AKBDO] (Vote_Manager_STATE=0) -> 1: (Votes′=addVote(Votes,b_i,Validator_i))&(Vote_Manager_STATE'=0);
[] (Vote_Manager_STATE=0) -> 
[] (Vote_Manager_STATE=0) -> 

endmodule 

