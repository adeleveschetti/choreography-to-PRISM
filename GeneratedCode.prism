module Hasher_i

Hasher_i_STATE: [0..10] init 0;

[DWKGH] (Hasher_i_STATE=0) -> mR : (Hasher_i_STATE'=0);
[HWOHA] (Hasher_i_STATE=0) -> lR : (Hasher_i_STATE'=0);

endmodule 

module Miner_i

Miner_i_STATE: [0..10] init 0;

[DWKGH] (Miner_i_STATE=0) -> hR_i : (b_i'=createBlock(Miner_i,c_i,L_i))&(c_i'=c_i+1)&(Miner_i_STATE'=1);
[LQPIM] (Miner_i_STATE=1) -> 1: (L_i'=addBlockLedger(L_i,b_i))&(Miner_i_STATE'=0);
[HWOHA] (Miner_i_STATE=0) -> hR_i : (Miner_i_STATE'=2);
[] (!isEmpty(set_i))&(Miner_i_STATE=2) -> 1:(b_i'=extractBlock(set_i))&(Miner_i_STATE'=3);
[] !(!isEmpty(set_i))&(Miner_i_STATE=2) -> 1:(Miner_i_STATE'=4);
[DPFAO] (Miner_i_STATE=3) -> 1: (setMiner_i' = addBlock(setMiner_i , b_i))&(Miner_i_STATE'=0);
[] (isEmpty(setMiner_i))&(Miner_i_STATE=4) -> 1: (Miner_i_STATE'=0);
[] !(isEmpty(setMiner_i))&(Miner_i_STATE=4) -> 1:(Miner_i_STATE'=5);
[] (canBeInserted(L_i,b_i))&(Miner_i_STATE=5) -> 1:(L_i'=addBlockLedger(L_i,b_i)&(setMiner_i'=removeBlock(setMiner_i,b_i))&(Miner_i_STATE'=0);
[] !(canBeInserted(L_i,b_i))&(Miner_i_STATE=5) -> 1:(Miner_i_STATE'=0);

endmodule 

module Network

Network_STATE: [0..10] init 0;

[LQPIM] (Network_STATE=0) -> 1: foreach k in N_i { set_k'=addBlock(set_k,b_i); }&(Network_STATE'=0);
[DPFAO] (Network_STATE=0) -> 1: set_i' = removeBlock(set_i,b_i)&(Network_STATE'=0);

endmodule 

