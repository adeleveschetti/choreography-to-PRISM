mdp
const N=4;

module phil1

phil1_STATE: [0..10] init 0;

[]  (phil1_STATE=0) -> 1:  (phil1_STATE'=0);
[]  (phil1_STATE=0) -> 1:  (phil1_STATE'=2);
[]  (phil1_STATE=2) -> 1/2:  (phil1_STATE'=4);
[] (phil1_STATE=4)&lfree-> 1:  (phil1_STATE'=6);
[] (phil1_STATE=6)&rfree-> 1:  (phil1_STATE'=8);
[]  (phil1_STATE=8) -> 1:  (phil1_STATE'=10);
[]  (phil1_STATE=10) -> 1:  (phil1_STATE'=12);
[]  (phil1_STATE=12) -> 1:  (phil1_STATE'=0);
[]  (phil1_STATE=10) -> 1:  (phil1_STATE'=14);
[]  (phil1_STATE=14) -> 1:  (phil1_STATE'=0);
[] (phil1_STATE=4)&(!rfree)-> 1:  (phil1_STATE'=16);
[]  (phil1_STATE=16) -> 1: (phil1_STATE'=2);
[] (phil1_STATE=2)&(!lfree)-> 1: (phil1_STATE'=4);
[]  (phil1_STATE=0) -> 1/2:  (phil1_STATE'=18);
[] (phil1_STATE=18)&rfree-> 1:  (phil1_STATE'=20);
[] (phil1_STATE=20)&lfree-> 1: (phil1_STATE'=8);
[] (phil1_STATE=20)&(!lfree)-> 1:  (phil1_STATE'=22);
[]  (phil1_STATE=22) -> 1: (phil1_STATE'=2);
[] (phil1_STATE=18)&(!rfree)-> 1: (phil1_STATE'=6);

endmodule 

module phil2

phil2_STATE: [0..10] init 0;

[]  (phil2_STATE=0) -> 1:  (phil2_STATE'=0);
[]  (phil2_STATE=0) -> 1:  (phil2_STATE'=2);
[]  (phil2_STATE=2) -> 1/2:  (phil2_STATE'=4);
[] (phil2_STATE=4)&lfree-> 1:  (phil2_STATE'=6);
[] (phil2_STATE=6)&rfree-> 1:  (phil2_STATE'=8);
[]  (phil2_STATE=8) -> 1:  (phil2_STATE'=10);
[]  (phil2_STATE=10) -> 1:  (phil2_STATE'=12);
[]  (phil2_STATE=12) -> 1:  (phil2_STATE'=0);
[]  (phil2_STATE=10) -> 1:  (phil2_STATE'=14);
[]  (phil2_STATE=14) -> 1:  (phil2_STATE'=0);
[] (phil2_STATE=4)&(!rfree)-> 1:  (phil2_STATE'=16);
[]  (phil2_STATE=16) -> 1: (phil2_STATE'=2);
[] (phil2_STATE=2)&(!lfree)-> 1: (phil2_STATE'=4);
[]  (phil2_STATE=0) -> 1/2:  (phil2_STATE'=18);
[] (phil2_STATE=18)&rfree-> 1:  (phil2_STATE'=20);
[] (phil2_STATE=20)&lfree-> 1: (phil1_STATE'=8);
[] (phil2_STATE=20)&(!lfree)-> 1:  (phil2_STATE'=22);
[]  (phil2_STATE=22) -> 1: (phil2_STATE'=2);
[] (phil2_STATE=18)&(!rfree)-> 1: (phil2_STATE'=6);

endmodule 

module phil3

phil3_STATE: [0..10] init 0;

[]  (phil3_STATE=0) -> 1:  (phil3_STATE'=0);
[]  (phil3_STATE=0) -> 1:  (phil3_STATE'=2);
[]  (phil3_STATE=2) -> 1/2:  (phil3_STATE'=4);
[] (phil3_STATE=4)&lfree-> 1:  (phil3_STATE'=6);
[] (phil3_STATE=6)&rfree-> 1:  (phil3_STATE'=8);
[]  (phil3_STATE=8) -> 1:  (phil3_STATE'=10);
[]  (phil3_STATE=10) -> 1:  (phil3_STATE'=12);
[]  (phil3_STATE=12) -> 1:  (phil3_STATE'=0);
[]  (phil3_STATE=10) -> 1:  (phil3_STATE'=14);
[]  (phil3_STATE=14) -> 1:  (phil3_STATE'=0);
[] (phil3_STATE=4)&(!rfree)-> 1:  (phil3_STATE'=16);
[]  (phil3_STATE=16) -> 1: (phil3_STATE'=2);
[] (phil3_STATE=2)&(!lfree)-> 1: (phil3_STATE'=4);
[]  (phil3_STATE=0) -> 1/2:  (phil3_STATE'=18);
[] (phil3_STATE=18)&rfree-> 1:  (phil3_STATE'=20);
[] (phil3_STATE=20)&lfree-> 1: (phil1_STATE'=8);
[] (phil3_STATE=20)&(!lfree)-> 1:  (phil3_STATE'=22);
[]  (phil3_STATE=22) -> 1: (phil3_STATE'=2);
[] (phil3_STATE=18)&(!rfree)-> 1: (phil3_STATE'=6);

endmodule 

