 

module PC

 


endmodule

module Module1

varModule1 : bool;

[] (Module1=0) -> m1 : (x1=3)&(Module1'=1) + 1 : (Module1'=2);
[] (Module1=1) -> k1 : (Module1'=1) + t1 : (x1=5)&(Module1'=1);
[] (Module1=2)&(x1=1) -> 1 : (t1'=1)&(Module1'=2); 
[] (Module1=2)&!(x1=1) -> 1 : (Module1'=2);

endmodule

module Module2

varModule2 : bool;

[] (Module2=0) -> m2 : (x2=3)&(Module2'=1) + 1 : (Module2'=2);
[] (Module2=1) -> k2 : (Module2'=1) + t2 : (x2=5)&(Module2'=1);
[] (Module2=2)&(x2=1) -> 1 : (t2'=1)&(Module2'=2); 
[] (Module2=2)&!(x2=1) -> 1 : (Module2'=2);

endmodule

module Module3

varModule3 : bool;

[] (Module3=0) -> m3 : (x3=3)&(Module3'=1) + 1 : (Module3'=2);
[] (Module3=1) -> k3 : (Module3'=1) + t3 : (x3=5)&(Module3'=1);
[] (Module3=2)&(x3=1) -> 1 : (t3'=1)&(Module3'=2); 
[] (Module3=2)&!(x3=1) -> 1 : (Module3'=2);

endmodule

