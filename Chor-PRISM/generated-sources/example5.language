preamble

"ctmc"

"const double mu=2;"

"formula rate1=mu*(1+min(3,b11+b21+b31+b41));"
"formula rate2=mu*(1+min(3,b12+b22+b32+b42));"
"formula rate3=mu*(1+min(3,b13+b23+b33+b43));"
"formula rate4=mu*(1+min(3,b14+b24+b34+b44));"
"formula rate5=mu*(1+min(3,b15+b25+b35+b45));"

endpreamble

n = 4;

Client[i] -> i in [1...n]
Client[i] : "b[i]1 : [0..1];", "b[i]2 : [0..1];", "b[i]3 : [0..1];", "b[i]4 : [0..1];", "b[i]5 : [0..1];" ;


{
PeerToPeer := 
	Client[i] -> Client[i]:
		(+["rate1*1"]  "(b[i]1'=1)"&&" " . PeerToPeer
		+["rate2*1"]  "(b[i]2'=1)"&&" " . PeerToPeer
		+["rate3*1"]  "(b[i]3'=1)"&&" " . PeerToPeer
		+["rate4*1"]  "(b[i]4'=1)"&&" " . PeerToPeer
		+["rate5*1"]  "(b[i]5'=1)"&&" " . PeerToPeer)
}