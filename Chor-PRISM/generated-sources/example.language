preamble

"ctmc"

"const k;"
"const T=k*1000;"

"const double rb ;"
"const double mR = 1/600;"
"const double lR = 1-mR;"

"const double hR1 = 0.25;"
"const double hR2 = 0.25;"
"const double hR3 = 0.25;"
"const double hR4 = 0.25;"
"const double rB = 1/12.6;"

"const int N = 100;"

endpreamble

n = 4;

Hasher[i] -> i in [1...n] ;

Miner[i] -> i in [1...n]
Miner[i] : "b[i] : block {m[i],0;genesis,0} ;", "B[i] : blockchain [{genesis,0;genesis,0}];" ,"c[i] : [0..N] init 0;", "setMiner[i] : list [];" ;

Network ->
Network : "set1 : list [];", "set2 : list [];", "set3 : list [];" , "set4 : list [];"; 
	

PoW := Hasher[i] -> Miner[i] :
+["mR*hR[i]"]  " "&&"(b[i]'=createB(b[i],B[i],c[i]))&(c[i]'=c[i]+1)" . if "!isEmpty(set[i])"@Miner[i] then { 
  		Miner[i] -> Network  : ["r[i]*1"] "(setMiner[i]'=addBlockSet(setMiner[i],b[i]))"&&foreach(k != i) "(set[k]'=addBlockSet(set[k],b[i]))" @Network . PoW 
 }
 else { Pow}
 +["lR*hR[i]"] " " && " " .PoW 
  

	