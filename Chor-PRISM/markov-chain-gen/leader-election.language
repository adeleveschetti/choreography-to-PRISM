
preamble
"dtmc"

"const N = 3;"
"const K = 3;"
endpreamble

n = 1;

Process1 ->
Process1 : "p1 : [0..2] init 0;", "v1 : [0..2] init 0;", "u1 : boolean init true;" ;

Process2 ->
Process2 : "p2 : [0..2] init 0;", "v2 : [0..2] init 0;", "u2 : boolean init true;" ;



Counter ->
Counter : "c : [0..1] init 0;" ;

{
Election := Process1 -> Process2 : (+["0.333*0.333"] "(p1'=0)&(v1'=0)&(u1'=true)" "(p2'=1)&(v2'=1)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=0)&(v1'=0)&(u1'=true)" "(p2'=0)&(v2'=0)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=0)&(v1'=0)&(u1'=true)" "(p2'=2)&(v2'=2)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=1)&(v1'=1)&(u1'=true)" "(p2'=1)&(v2'=1)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=1)&(v1'=1)&(u1'=true)" "(p2'=0)&(v2'=0)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=1)&(v1'=1)&(u1'=true)" "(p2'=2)&(v2'=2)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=2)&(v1'=2)&(u1'=true)" "(p2'=2)&(v2'=2)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=2)&(v1'=2)&(u1'=true)" "(p2'=1)&(v2'=1)&(u2'=true)" . Election2
                                    +["0.333*0.333"] "(p1'=2)&(v1'=2)&(u1'=true)" "(p2'=0)&(v2'=0)&(u2'=true)" . Election2
                                )

Election := allsynch(Process[j]) | j=1,..,N :
                (
                    + ["1/K"] "(p[i]'=0)&(v[i]'=0)&(u[i]'=true)"
                    + ["1/K"] "(p[i]'=1)&(v[i]'=1)&(u[i]'=true)"
                    + ["1/K"] "(p[i]'=2)&(v[i]'=2)&(u[i]'=true)"
                )

Protocol :=  allsynch(Counter,Process[j]) | j=1,..,N :
                (
                    if "(c<N-1)"@Process[j],Counter {
                         "(c'=c+1)"@Counter , if "(u[j])"@Process[j] {
                            if "(p[j]=p[j+1])"@Process[j] {
                                "(u[j]'=true) & (v[j]'=v[j+1]) "
                            }
                            else{
                                "(u[j]'=false) & (v[j]'=v[j+1]) & (p[j]'=0)"
                            }
                         }
                         else {
                            if
                         }
                    }
                    else{

                    }

                )


Election2 :=
        if "(u1)&(p1=v2)&(c<1)"@Process1, "(u2)&(p2=v1)&(c<1)"@Process2 then {
                  Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=false)&(v1'=v2)&(p1'=0)" "(u2'=false)&(v2'=v1)&(p2'=0)" .Election2)
        }
        else{
            if "(u1)&(p1!=v2)&(c<1)"@Process1, "(u2)&(p2!=v1)&(c<1)"@Process2 then {
                  Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=true)&(v1'=v2)" "(u2'=true)&(v2'=v1)" .Election2)
             }
             else{
                 if "(u1)&(p1=v2)&(c<1)"@Process1, "(!u2)&(c<1)"@Process2 then {
                        Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=false)&(v1'=v2)&(p1'=0)" "(u2'=false)&(v2'=v1)" .Election2)
                 }
                 else{
                        if "(u1)&(p1!=v2)&(c<1)"@Process1, "(!u2)&(c<1)"@Process2 then {
                             Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=true)&(v1'=v2)" "(u2'=false)&(v2'=v1)" .Election2)
                        }

                        else{
                            if "(!u1)&(c<1)"@Process1, "(u2)&(p2!=v1)&(c<1)"@Process2 then {
                                  Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=false)&(v1'=v2)" "(u2'=true)&(v2'=v1)" .Election2)

                            }
                            else{
                                 if "(!u1)&(c<1)"@Process1, "(u2)&(p2=v1)&(c<1)"@Process2 then {
                                            Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=false)&(v1'=v2)" "(u2'=false)&(v2'=v1)&(p2'=0)" .Election2)
                                 }
                                 else{
                                     if "(!u1)&(c<1)"@Process1, "(!u2)&(c<1)"@Process2 then {
                                             Counter -> Process1,Process2: (["1*1"] "(c'=c+1)" "(u1'=false)&(v1'=v2)" "(u2'=false)&(v2'=v1)" .Election2)
                                     }
                                     else{
                                         if "(u1)&(p1=v2)&(c=1)"@Process1, "(u2)&(p2=v1)&(c=1)"@Process2 then {
                                               Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=false)&(v1'=0)&(p1'=0)" "(u2'=false)&(v2'=0)&(p2'=0)" .Election3)
                                         }
                                         else{
                                           if "(u1)&(p1!=v2)&(c=1)"@Process1, "(u2)&(p2!=v1)&(c=1)"@Process2 then {
                                               Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=true)&(v1'=0)&(p1'=0)" "(u2'=true)&(v2'=0)&(p2'=0)" .Election3)
                                                        }
                                                        else{
                                                            if "(u1)&(p1=v2)&(c=1)"@Process1, "(!u2)&(c=1)"@Process2 then {
                                                                 Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=false)&(v1'=0)&(p1'=0)" "(u2'=true)&(v2'=0)&(p2'=0)" .Election3)
                                                            }
                                                            else{
                                                                   if "(u1)&(p1!=v2)&(c=1)"@Process1, "(!u2)&(c=1)"@Process2 then {
                                                                        Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=true)&(v1'=0)&(p1'=0)" "(u2'=false)&(v2'=0)" .Election3)
                                                                   }

                                                                   else{
                                                                       if "(!u1)&(c=1)"@Process1, "(u2)&(p2!=v1)&(c=1)"@Process2 then {
                                                                            Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=false)&(v1'=0)" "(u2'=true)&(v2'=0)&(p2'=0)" .Election3)
                                                                       }
                                                                       else{
                                                                            if "(!u1)&(c=1)"@Process1, "(u2)&(p2=v1)&(c=1)"@Process2 then {
                                                                                    Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=false)&(v1'=0)" "(u2'=false)&(v2'=0)&(p2'=0)" .Election3)
                                                                            }
                                                                            else{
                                                                                    Counter -> Process1,Process2: (["1*1"] "(c'=c)" "(u1'=false)&(v1'=0)" "(u2'=false)&(v2'=0)" .Election3)

                                                                            }
                                                                       }
                                                                   }
                                                            }
                                                        }
                                     }
                                     }
                                 }
                            }
                        }
                 }
             }
             }



Election3 := if "(u1)|(u2)"@Counter, "true"@Process1, "true"@Process2 then {
                 Counter -> Process1, Process2: (["1*1"] "(c'=c)"  "(u1'=false)&(v1'=0)&(p1'=0)" "(u2'=false)&(v2'=0)&(p2'=0)" . Counter -> Process1, Process2 : (["1*1"] " " " " " " .END))
             }
             else{
                 Counter -> Process1, Process2: (["1*1"] "(c'=1)"  "(u1'=false)&(v1'=0)&(p1'=0)" "(u2'=false)&(v2'=0)&(p2'=0)" .Election)
             }
}